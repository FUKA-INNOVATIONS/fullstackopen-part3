{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","servieces/persons.js","components/Notification.js","App.js","reportWebVitals.js","index.js"],"names":["Filter","nameFilter","handleChange","className","value","onChange","PersonForm","props","onSubmit","handleSubmit","newName","handleNameChange","newPhone","handlePhoneChange","type","Persons","persons","handleDelete","map","person","name","number","onClick","id","baseUrl","axios","get","then","response","data","newPerson","request","post","console","log","personId","delete","updatedPerson","put","catch","err","ErrorNotification","message","style","errorStyle","SuccessNotification","successStyle","background","color","fontSize","borderStyle","padding","margin","App","useState","setPersons","setNewName","setNewPhone","setNameFilter","showAll","setShowAll","successMessage","setSuccessMessage","errorMessage","setErrorMessage","showMessage","newMessage","setTimeout","useEffect","peopleService","personsToShow","filter","includes","notificationContent","e","filterTerm","target","length","preventDefault","personExists","forEach","toLowerCase","toLocaleLowerCase","window","confirm","p","concat","alert","returnedPerson","personName","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a934c98.chunk.js","sourcesContent":["const Filter = ( { nameFilter, handleChange } ) => {\n  return (\n      <div className={'filter'}>\n        Filter shown with: <input value={ nameFilter } onChange={ handleChange }/>\n      </div>\n  );\n};\n\nexport default Filter;","const PersonForm = props => {\n  return (\n      <div className={'personForm'}>\n        <form onSubmit={ props.handleSubmit }>\n          <div>\n            name: <input value={ props.newName } onChange={ props.handleNameChange }/>\n          </div>\n          <div>\n            phone: <input value={ props.newPhone } onChange={ props.handlePhoneChange }/>\n          </div>\n          <div>\n            <button type=\"submit\">add</button>\n          </div>\n        </form>\n      </div>\n  );\n\n};\n\nexport default PersonForm;","const Persons = ( { persons, handleDelete } ) => {\n  return (\n      <div className={ 'persons' }>\n        { persons.map( person => <p key={ person.name }>{ person.name } ({ person.number })\n          <button onClick={ () => handleDelete(person.id, person.name) }>delete</button></p> ) }\n      </div>\n  );\n};\n\nexport default Persons;","import axios from 'axios';\nconst baseUrl = 'http://localhost:3001/persons';\n\nconst getAll = () => {\n  const request = axios.get( baseUrl );\n  return request.then( response => response.data );\n};\n\nconst create = newPerson => {\n  const request = axios.post( baseUrl, newPerson );\n  console.log(request.then(request.data))\n  return request.then( response => response.data );\n};\n\nconst deletePerson = personId => {\n  const request = axios.delete(`${baseUrl}/${personId}`)\n  return request\n}\n\nconst upadateNumber = (id, updatedPerson) => {\n  const request = axios\n      .put(`${baseUrl}/${id}`, updatedPerson)\n      .then(response => response.data)\n      .catch(err => err)\n}\n\nexport default { getAll, create, deletePerson, upadateNumber };","const ErrorNotification = ( { message } ) => {\n  if ( message === null ) {\n    return null;\n  }\n\n  return (\n      <div style={ errorStyle }>\n        { message }\n      </div>\n  );\n};\n\nconst SuccessNotification = ( { message } ) => {\n  if ( message === null ) {\n    return null;\n  }\n\n  return (\n      <div style={ successStyle }>\n        { message }\n      </div>\n  );\n};\n\nconst successStyle = {\n  background: 'lightgrey',\n  color: 'black',\n  fontSize: 20,\n  borderStyle: 'solid',\n  padding: 10,\n  margin: 10,\n};\n\nconst errorStyle = {\n  background: 'lightgrey',\n  color: 'red',\n  fontSize: 20,\n  borderStyle: 'solid',\n  padding: 10,\n  margin: 10,\n};\n\nexport  {SuccessNotification, ErrorNotification};","import React, { useState, useEffect } from 'react';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport peopleService from './servieces/persons';\nimport {\n  SuccessNotification,\n  ErrorNotification,\n} from './components/Notification';\n\nconst App = () => {\n\n  const [ persons, setPersons ] = useState( [] );\n  const [ newName, setNewName ] = useState( '' );\n  const [ newPhone, setNewPhone ] = useState( '' );\n\n  const [ nameFilter, setNameFilter ] = useState( '' );\n  const [ showAll, setShowAll ] = useState( true );\n\n  const [ successMessage, setSuccessMessage ] = useState( null );\n  const [ errorMessage, setErrorMessage ] = useState( null );\n\n  const showMessage = ( newMessage, type ) => {\n    type === 'success' ? setSuccessMessage( newMessage ) : setErrorMessage(\n        newMessage );\n    setTimeout( () => {\n      setErrorMessage( null );\n      setSuccessMessage( null );\n    }, 5000 );\n  };\n\n  useEffect( () => {\n    peopleService.getAll().then( response => {\n      setPersons( response );\n    } );\n  }, [] );\n\n  const personsToShow = showAll ? persons : persons.filter(\n      person => person.name.includes( nameFilter ) );\n\n  const handleNameFilterChange = e => {\n\n    let filterTerm = e.target.value;\n    if ( filterTerm.length > 0 ) {\n      setShowAll( false );\n    } else {\n      setShowAll( true );\n    }\n\n    setNameFilter( filterTerm );\n  };\n\n  // Add name input value to newName state\n  const handleNameChange = e => setNewName( e.target.value );\n\n  // Add New phone input value to state\n  const handlePhoneChange = e => setNewPhone( e.target.value );\n\n  // Add new person to the list\n  const handleAddPerson = ( e ) => {\n    e.preventDefault();\n\n    let personExists = false;\n\n    // Check and alert incase name already exists\n    persons.forEach( person => {\n      if ( person.name.toLowerCase() === newName.toLocaleLowerCase() ) {\n        personExists = true;\n\n        // Update number if user entered new number\n        if ( newPhone.length !== 0 ) {\n          const updatedPerson = {\n            name: person.name,\n            number: newPhone,\n          };\n\n          let updateConfirmed = window.confirm(\n              `${ person.name } is already added to phonebook, replace the old number with a new one?` );\n          if ( updateConfirmed ) {\n            peopleService.upadateNumber( person.id, updatedPerson );\n            setPersons( persons.filter( p => p.id !== person.id ).\n                concat( updatedPerson ) );\n\n            showMessage( `${ newName }'s phone number is updated!`, 'success' );\n          }\n        } else {\n          alert(\n              `To update the number, Please write a new number` );\n        }\n      }\n    } );\n\n    // Add new person to phonebook\n    if ( !personExists ) {\n      const newPerson = {\n        name: newName,\n        number: newPhone,\n      };\n      peopleService.create( newPerson ).\n          then( returnedPerson => {\n            setPersons( persons.concat( returnedPerson ) );\n            setNewName( '' );\n            setNewPhone( '' );\n          } );\n\n      showMessage( `${ newName }'s phone number is added!`, 'success' );\n    }\n  };\n\n  const handleDeletePerson = ( personId, personName ) => {\n    let deleteConfirmed = window.confirm(\n        `Are you sure to delete ${ personName }?` );\n    if ( deleteConfirmed ) {\n      peopleService.deletePerson( personId )\n      .then(response => {\n        //setPersons( persons.filter( person => person.id !== personId ) );\n        peopleService.getAll().then( response => {\n          setPersons( response );\n        } );\n        showMessage( 'Number successfully deleted', 'success' )\n      })\n      .catch( e => {\n            showMessage( `Information of ${ personName } has already been removed.`, 'error')\n        setTimeout(() => {\n          peopleService.getAll().then( response => {\n            setPersons( response );\n          }, 2000 );\n        })\n          })\n    }\n\n  };\n\n  const notificationContent = successMessage\n      ? <SuccessNotification message={successMessage} />\n      : <ErrorNotification message={errorMessage} />\n\n  return (\n      <div className={ 'main' }>\n        { notificationContent }\n        <h2>Phonebook</h2>\n        <Filter nameFilter={ nameFilter }\n                handleChange={ handleNameFilterChange }/>\n\n        <h3>Add a new</h3>\n        <PersonForm newName={ newName } newPhone={ newPhone }\n                    handleSubmit={ handleAddPerson }\n                    handleNameChange={ handleNameChange }\n                    handlePhoneChange={ handlePhoneChange }/>\n\n        <h3>Numbers</h3>\n        <Persons persons={ personsToShow } handleDelete={ handleDeletePerson }/>\n      </div>\n  );\n\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
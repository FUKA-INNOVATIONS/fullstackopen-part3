{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","servieces/persons.js","components/Notification.js","App.js","reportWebVitals.js","index.js"],"names":["Filter","nameFilter","handleChange","className","value","onChange","PersonForm","props","onSubmit","handleSubmit","newName","handleNameChange","newPhone","handlePhoneChange","type","Persons","persons","handleDelete","map","person","name","number","onClick","id","baseUrl","axios","get","then","response","data","newPerson","post","personId","delete","updatedPerson","put","catch","err","ErrorNotification","message","style","errorStyle","SuccessNotification","successStyle","background","color","fontSize","borderStyle","padding","margin","App","useState","setPersons","setNewName","setNewPhone","setNameFilter","showAll","setShowAll","successMessage","setSuccessMessage","errorMessage","setErrorMessage","showMessage","newMessage","setTimeout","useEffect","peopleService","personsToShow","filter","includes","notificationContent","e","filterTerm","target","length","preventDefault","personExists","forEach","toLowerCase","toLocaleLowerCase","editedPerson","window","confirm","p","concat","alert","console","log","error","personName","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAQeA,EARA,SAAC,GAAoC,IAAjCC,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,aAC7B,OACI,sBAAKC,UAAW,SAAhB,gCACqB,uBAAOC,MAAQH,EAAaI,SAAWH,QCgBnDI,EAnBI,SAAAC,GACjB,OACI,qBAAKJ,UAAW,aAAhB,SACE,uBAAMK,SAAWD,EAAME,aAAvB,UACE,yCACQ,uBAAOL,MAAQG,EAAMG,QAAUL,SAAWE,EAAMI,sBAExD,0CACS,uBAAOP,MAAQG,EAAMK,SAAWP,SAAWE,EAAMM,uBAE1D,8BACE,wBAAQC,KAAK,SAAb,yBCFGC,EATC,SAAC,GAAiC,IAA9BC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,aAC3B,OACI,qBAAKd,UAAY,UAAjB,SACIa,EAAQE,KAAK,SAAAC,GAAM,OAAI,8BAAyBA,EAAOC,KAAhC,KAA0CD,EAAOE,OAAjD,IACvB,wBAAQC,QAAU,kBAAML,EAAaE,EAAOI,GAAIJ,EAAOC,OAAvD,sBADgCD,EAAOC,Y,gBCF3CI,EAAU,eAwBD,EAtBA,WAEb,OADgBC,IAAMC,IAAKF,GACZG,MAAM,SAAAC,GAAQ,OAAIA,EAASC,SAoB7B,EAjBA,SAAAC,GAEb,OADgBL,IAAMM,KAAMP,EAASM,IAgBxB,EAZM,SAAAE,GAEnB,OADgBP,IAAMQ,OAAN,UAAgBT,EAAhB,YAA2BQ,KAW9B,EAPO,SAACT,EAAIW,GACTT,IACXU,IADW,UACJX,EADI,YACOD,GAAMW,GACxBP,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAC1BO,OAAM,SAAAC,GAAG,OAAIA,MCtBdC,EAAoB,SAAC,GAAmB,IAAhBC,EAAe,EAAfA,QAC5B,OAAiB,OAAZA,EACI,KAIL,qBAAKC,MAAQC,EAAb,SACIF,KAKJG,EAAsB,SAAC,GAAmB,IAAhBH,EAAe,EAAfA,QAC9B,OAAiB,OAAZA,EACI,KAIL,qBAAKC,MAAQG,EAAb,SACIJ,KAKJI,EAAe,CACnBC,WAAY,YACZC,MAAO,QACPC,SAAU,GACVC,YAAa,QACbC,QAAS,GACTC,OAAQ,IAGJR,EAAa,CACjBG,WAAY,YACZC,MAAO,MACPC,SAAU,GACVC,YAAa,QACbC,QAAS,GACTC,OAAQ,ICkIKC,EA/JH,WAEV,MAAgCC,mBAAU,IAA1C,mBAAQnC,EAAR,KAAiBoC,EAAjB,KACA,EAAgCD,mBAAU,IAA1C,mBAAQzC,EAAR,KAAiB2C,EAAjB,KACA,EAAkCF,mBAAU,IAA5C,mBAAQvC,EAAR,KAAkB0C,EAAlB,KAEA,EAAsCH,mBAAU,IAAhD,mBAAQlD,EAAR,KAAoBsD,EAApB,KACA,EAAgCJ,oBAAU,GAA1C,mBAAQK,EAAR,KAAiBC,EAAjB,KAEA,EAA8CN,mBAAU,MAAxD,mBAAQO,EAAR,KAAwBC,EAAxB,KACA,EAA0CR,mBAAU,MAApD,mBAAQS,EAAR,KAAsBC,EAAtB,KAEMC,EAAc,SAAEC,EAAYjD,GACvB,YAATA,EAAqB6C,EAAmBI,GAAeF,EACnDE,GACJC,YAAY,WACVH,EAAiB,MACjBF,EAAmB,QAClB,MAGLM,qBAAW,WACTC,IAAuBvC,MAAM,SAAAC,GAC3BwB,EAAYxB,QAGb,IAEH,IAAMuC,EAAgBX,EAAUxC,EAAUA,EAAQoD,QAC9C,SAAAjD,GAAM,OAAIA,EAAOC,KAAKiD,SAAUpE,MA0G9BqE,EAAsBZ,EACtB,cAAC,EAAD,CAAqBnB,QAASmB,IAC9B,cAAC,EAAD,CAAmBnB,QAASqB,IAElC,OACI,sBAAKpB,MAAO,CAACS,OAAQ,IAAK9C,UAAY,OAAtC,UACImE,EACF,2CACA,cAAC,EAAD,CAAQrE,WAAaA,EACbC,aAjHiB,SAAAqE,GAE7B,IAAIC,EAAaD,EAAEE,OAAOrE,MACrBoE,EAAWE,OAAS,EACvBjB,GAAY,GAEZA,GAAY,GAEdF,EAAeiB,MA2GX,2CACA,cAAC,EAAD,CAAY9D,QAAUA,EAAUE,SAAWA,EAC/BH,aAnGM,SAAE8D,GACxBA,EAAEI,iBAEF,IAAIC,GAAe,GAGnB5D,EAAQ6D,SAAS,SAAA1D,GACf,GAAKA,EAAOC,KAAK0D,gBAAkBpE,EAAQqE,oBAIzC,GAHAH,GAAe,EAGU,IAApBhE,EAAS8D,OAAe,CAC3B,IAAMM,EAAe,CACnB5D,KAAMD,EAAOC,KACbC,OAAQT,GAGYqE,OAAOC,QAAP,UACd/D,EAAOC,KADO,6EAGpB8C,EAA6B/C,EAAOI,GAAIyD,GACxC5B,EAAYpC,EAAQoD,QAAQ,SAAAe,GAAC,OAAIA,EAAE5D,KAAOJ,EAAOI,MAC7C6D,OAAQJ,IAEZlB,EAAY,GAAD,OAAMpD,EAAN,+BAA6C,iBAG1D2E,MAAM,sDAONT,IAOJV,EALkB,CAChB9C,KAAMV,EACNW,OAAQT,IAINe,MAAM,SAAAC,GAEJwB,EAAYpC,EAAQoE,OAAOxD,EAASC,OACpCiC,EAAY,GAAD,OAAMpD,EAAN,6BAA2C,WAEtD2C,EAAY,IAAMC,EAAa,OAC9BlB,OAAM,SAAAC,GACXiD,QAAQC,IAAI,kBAAmBlD,EAAIT,SAASC,KAAK2D,OACjD1B,EAAY,GAAD,OAAIzB,EAAIT,SAASC,KAAK2D,OAAS,aAkD9B7E,iBA1GO,SAAA4D,GAAC,OAAIlB,EAAYkB,EAAEE,OAAOrE,QA2GjCS,kBAxGQ,SAAA0D,GAAC,OAAIjB,EAAaiB,EAAEE,OAAOrE,UA0G/C,yCACA,cAAC,EAAD,CAASY,QAAUmD,EAAgBlD,aA/Cd,SAAEe,EAAUyD,GAEfR,OAAOC,QAAP,iCACSO,EADT,OAIpBvB,EAA4BlC,GAC3BL,MAAK,SAAAC,GAKJsC,IAAuBvC,MAAM,SAAAC,GAC3BwB,EAAYxB,MAEdkC,EAAa,8BAA+B,cAE7C1B,OAAO,SAAAmC,GACFT,EAAY,kBAAD,OAAqB2B,EAArB,8BAA8D,SAC7EzB,YAAW,WACTE,IAAuBvC,MAAM,SAAAC,GAC3BwB,EAAYxB,KACX,kBC9HE8D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjE,MAAK,YAAkD,IAA/CkE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ed75bd71.chunk.js","sourcesContent":["const Filter = ( { nameFilter, handleChange } ) => {\n  return (\n      <div className={'filter'}>\n        Filter shown with: <input value={ nameFilter } onChange={ handleChange }/>\n      </div>\n  );\n};\n\nexport default Filter;","const PersonForm = props => {\n  return (\n      <div className={'personForm'}>\n        <form onSubmit={ props.handleSubmit }>\n          <div>\n            name: <input value={ props.newName } onChange={ props.handleNameChange }/>\n          </div>\n          <div>\n            phone: <input value={ props.newPhone } onChange={ props.handlePhoneChange }/>\n          </div>\n          <div>\n            <button type=\"submit\">add</button>\n          </div>\n        </form>\n      </div>\n  );\n\n};\n\nexport default PersonForm;","const Persons = ( { persons, handleDelete } ) => {\n  return (\n      <div className={ 'persons' }>\n        { persons.map( person => <p key={ person.name }>{ person.name } ({ person.number })\n          <button onClick={ () => handleDelete(person.id, person.name) }>delete</button></p> ) }\n      </div>\n  );\n};\n\nexport default Persons;","import axios from 'axios';\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n  const request = axios.get( baseUrl );\n  return request.then( response => response.data );\n};\n\nconst create = newPerson => {\n  const request = axios.post( baseUrl, newPerson );\n  return request\n};\n\nconst deletePerson = personId => {\n  const request = axios.delete(`${baseUrl}/${personId}`)\n  return request\n}\n\nconst upadateNumber = (id, updatedPerson) => {\n  const request = axios\n      .put(`${baseUrl}/${id}`, updatedPerson)\n      .then(response => response.data)\n      .catch(err => err)\n}\n\nexport default { getAll, create, deletePerson, upadateNumber };","const ErrorNotification = ( { message } ) => {\n  if ( message === null ) {\n    return null;\n  }\n\n  return (\n      <div style={ errorStyle }>\n        { message }\n      </div>\n  );\n};\n\nconst SuccessNotification = ( { message } ) => {\n  if ( message === null ) {\n    return null;\n  }\n\n  return (\n      <div style={ successStyle }>\n        { message }\n      </div>\n  );\n};\n\nconst successStyle = {\n  background: 'lightgrey',\n  color: 'black',\n  fontSize: 20,\n  borderStyle: 'solid',\n  padding: 10,\n  margin: 10,\n};\n\nconst errorStyle = {\n  background: 'lightgrey',\n  color: 'red',\n  fontSize: 20,\n  borderStyle: 'solid',\n  padding: 10,\n  margin: 10,\n};\n\nexport  {SuccessNotification, ErrorNotification};","import React, { useState, useEffect } from 'react';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport peopleService from './servieces/persons';\nimport {\n  SuccessNotification,\n  ErrorNotification,\n} from './components/Notification';\n\nconst App = () => {\n\n  const [ persons, setPersons ] = useState( [] );\n  const [ newName, setNewName ] = useState( '' );\n  const [ newPhone, setNewPhone ] = useState( '' );\n\n  const [ nameFilter, setNameFilter ] = useState( '' );\n  const [ showAll, setShowAll ] = useState( true );\n\n  const [ successMessage, setSuccessMessage ] = useState( null );\n  const [ errorMessage, setErrorMessage ] = useState( null );\n\n  const showMessage = ( newMessage, type ) => {\n    type === 'success' ? setSuccessMessage( newMessage ) : setErrorMessage(\n        newMessage );\n    setTimeout( () => {\n      setErrorMessage( null );\n      setSuccessMessage( null );\n    }, 5000 );\n  };\n\n  useEffect( () => {\n    peopleService.getAll().then( response => {\n      setPersons( response );\n      //console.log('response in effect: ', response);\n    } );\n  }, [] );\n\n  const personsToShow = showAll ? persons : persons.filter(\n      person => person.name.includes( nameFilter ) );\n\n  const handleNameFilterChange = e => {\n\n    let filterTerm = e.target.value;\n    if ( filterTerm.length > 0 ) {\n      setShowAll( false );\n    } else {\n      setShowAll( true );\n    }\n    setNameFilter( filterTerm );\n  };\n\n  // Add name input value to newName state\n  const handleNameChange = e => setNewName( e.target.value );\n\n  // Add New phone input value to state\n  const handlePhoneChange = e => setNewPhone( e.target.value );\n\n  // Add new person to the list\n  const handleAddPerson = ( e ) => {\n    e.preventDefault();\n\n    let personExists = false;\n\n    // Check and alert incase name already exists\n    persons.forEach( person => {\n      if ( person.name.toLowerCase() === newName.toLocaleLowerCase() ) {\n        personExists = true;\n\n        // Update number if user entered new number\n        if ( newPhone.length !== 0 ) {\n          const editedPerson = {\n            name: person.name,\n            number: newPhone,\n          };\n\n          let updateConfirmed = window.confirm(\n              `${ person.name } is already added to phonebook, replace the old number with a new one?` );\n          if ( updateConfirmed ) {\n            peopleService.upadateNumber( person.id, editedPerson );\n            setPersons( persons.filter( p => p.id !== person.id ).\n                concat( editedPerson ) );\n\n            showMessage( `${ newName }'s phone number is updated!`, 'success' );\n          }\n        } else {\n          alert(\n              `To update the number, Please write a new number` );\n        }\n      }\n    } );\n\n    // Add new person to phonebook\n    if ( !personExists ) {\n\n      const newPerson = {\n        name: newName,\n        number: newPhone,\n      }\n\n      peopleService.create( newPerson ).\n          then( response => {\n            //console.log(response);\n            setPersons( persons.concat(response.data) );\n            showMessage( `${ newName }'s phone number is added!`, 'success' );\n            //console.log(response);\n            setNewName( '' ); setNewPhone( '' );\n          }).catch(err => {\n        console.log('ERROR message::', err.response.data.error);\n        showMessage(`${err.response.data.error}`, 'error')\n      })\n\n\n    }\n  };\n\n  const handleDeletePerson = ( personId, personName ) => {\n\n    let deleteConfirmed = window.confirm(\n        `Are you sure to delete ${ personName }?` );\n\n    if ( deleteConfirmed ) {\n      peopleService.deletePerson( personId )\n      .then(response => {\n        //console.log('deletePerson response in App.js: ', response);\n        //console.log('response status in App.js delete: ', response.status)\n\n\n        peopleService.getAll().then( response => {\n          setPersons( response );\n        } );\n        showMessage( 'Number successfully deleted', 'success' )\n      })\n      .catch( e => {\n            showMessage( `Information of ${ personName } has already been removed.`, 'error')\n        setTimeout(() => {\n          peopleService.getAll().then( response => {\n            setPersons( response );\n          }, 2000 );\n        })\n          })\n    }\n\n  };\n\n  const notificationContent = successMessage\n      ? <SuccessNotification message={successMessage} />\n      : <ErrorNotification message={errorMessage} />\n\n  return (\n      <div style={{margin: 20}} className={ 'main' }>\n        { notificationContent }\n        <h2>Phonebook</h2>\n        <Filter nameFilter={ nameFilter }\n                handleChange={ handleNameFilterChange }/>\n\n        <h3>Add a new</h3>\n        <PersonForm newName={ newName } newPhone={ newPhone }\n                    handleSubmit={ handleAddPerson }\n                    handleNameChange={ handleNameChange }\n                    handlePhoneChange={ handlePhoneChange }/>\n\n        <h3>Numbers</h3>\n        <Persons persons={ personsToShow } handleDelete={ handleDeletePerson }/>\n      </div>\n  );\n\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}